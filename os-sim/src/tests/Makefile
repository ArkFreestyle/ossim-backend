# Makefile.in generated by automake 1.15 from Makefile.am.
# src/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/os-sim
pkgincludedir = $(includedir)/os-sim
pkglibdir = $(libdir)/os-sim
pkglibexecdir = $(libexecdir)/os-sim
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
check_PROGRAMS = test-load-directives$(EXEEXT)
TESTS = test-load-directives$(EXEEXT)
subdir = src/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_test_load_directives_OBJECTS =  \
	test_load_directives-test-load-directives.$(OBJEXT) \
	test_load_directives-sim-dummy.$(OBJEXT) \
	test_load_directives-sim-xml-directive.$(OBJEXT) \
	test_load_directives-sim-rule.$(OBJEXT) \
	test_load_directives-sim-inet.$(OBJEXT) \
	test_load_directives-sim-radix.$(OBJEXT) \
	test_load_directives-sim-network.$(OBJEXT) \
	test_load_directives-sim-net.$(OBJEXT) \
	test_load_directives-sim-sensor.$(OBJEXT) \
	test_load_directives-sim-uuid.$(OBJEXT) \
	test_load_directives-sim-plugin.$(OBJEXT) \
	test_load_directives-sim-context.$(OBJEXT) \
	test_load_directives-sim-host.$(OBJEXT) \
	test_load_directives-sim-database.$(OBJEXT) \
	test_load_directives-sim-policy.$(OBJEXT) \
	test_load_directives-sim-role.$(OBJEXT) \
	test_load_directives-sim-util.$(OBJEXT) \
	test_load_directives-sim-event.$(OBJEXT) \
	test_load_directives-sim-plugin-sid.$(OBJEXT) \
	test_load_directives-sim-mini-object.$(OBJEXT) \
	test_load_directives-sim-text-fields.$(OBJEXT) \
	test_load_directives-sim-command.$(OBJEXT) \
	test_load_directives-sim-engine.$(OBJEXT) \
	test_load_directives-sim-directive.$(OBJEXT) \
	test_load_directives-sim-directive-group.$(OBJEXT) \
	test_load_directives-sim-db-command.$(OBJEXT) \
	test_load_directives-sim-server.$(OBJEXT) \
	test_load_directives-sim-db-insert.$(OBJEXT) \
	test_load_directives-sim-idm-entry.$(OBJEXT) \
	test_load_directives-sim-idm-anomalies.$(OBJEXT) \
	test_load_directives-sim-config.$(OBJEXT) \
	test_load_directives-sim-session.$(OBJEXT) \
	test_load_directives-sim-container.$(OBJEXT) \
	test_load_directives-sim-plugin-state.$(OBJEXT) \
	test_load_directives-sim-timetable.$(OBJEXT) \
	test_load_directives-sim-idm.$(OBJEXT) \
	test_load_directives-sim-timezone.$(OBJEXT) \
	test_load_directives-sim-geoip.$(OBJEXT) \
	test_load_directives-sim-alarm-stats.$(OBJEXT) \
	test_load_directives-sim-xml-config.$(OBJEXT) \
	test_load_directives-sim-groupalarm.$(OBJEXT) \
	test_load_directives-sim-reputation.$(OBJEXT) \
	test_load_directives-sim-connect.$(OBJEXT) \
	test_load_directives-sim-log.$(OBJEXT) \
	test_load_directives-sim-organizer.$(OBJEXT) \
	test_load_directives-sim-correlation.$(OBJEXT)
test_load_directives_OBJECTS = $(am_test_load_directives_OBJECTS)
am__DEPENDENCIES_1 =
test_load_directives_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
test_load_directives_LINK = $(CCLD) $(test_load_directives_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(test_load_directives_SOURCES)
DIST_SOURCES = $(test_load_directives_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/stip-backend/os-sim/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /root/stip-backend/os-sim/missing autoconf
AUTOHEADER = ${SHELL} /root/stip-backend/os-sim/missing autoheader
AUTOMAKE = ${SHELL} /root/stip-backend/os-sim/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -fgnu89-inline -Wmissing-prototypes -Wall -Wextra -Werror -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_LIBS = -lgthread-2.0 -pthread -lgio-2.0 -lgobject-2.0 -lglib-2.0
GNET_CFLAGS = -pthread -I/usr/local/include/gnet-2.0 -I/usr/local/lib/gnet-2.0/include/ -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GNET_LIBS = -L/usr/local/lib -lgnet-2.0 -lglib-2.0 -lgthread-2.0 -pthread -lglib-2.0
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JSON_GLIB_CFLAGS = -pthread -I/usr/include/json-glib-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
JSON_GLIB_LIBS = -ljson-glib-1.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0
LDFLAGS =  -Wl,-z,relro,-z,now -Wl,--hash-style=gnu
LIBBSON_CFLAGS = -I/usr/local/include/libbson-1.0
LIBBSON_LIBS = -L/usr/local/lib -lbson-1.0
LIBGDA_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/libxml2 -I/usr/include/libgda-5.0 -I/usr/include/libgda-5.0/libgda
LIBGDA_LIBS = -lgda-5.0 -lgobject-2.0 -lgthread-2.0 -pthread -lglib-2.0 -lxml2
LIBGEOIP_CFLAGS = -I/usr/include/x86_64-linux-gnu
LIBGEOIP_LIBS = -lmaxminddb
LIBOBJS = 
LIBPCRE_CFLAGS = 
LIBPCRE_LIBS = -lpcre
LIBS = 
LIBSOUP_CFLAGS = -pthread -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
LIBSOUP_LIBS = -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0
LIBTIDY_LIBS = 
LIBUUID_CFLAGS = -I/usr/include/uuid
LIBUUID_LIBS = -luuid
LIBXML_CFLAGS = -I/usr/include/libxml2
LIBXML_LIBS = -lxml2
LIBZLIB_CFLAGS = 
LIBZLIB_LIBS = -lz
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /root/stip-backend/os-sim/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OPENSSL_CFLAGS = 
OPENSSL_LIBS = -lssl -lcrypto
OS_SIM_MAJOR_VERSION = 
OS_SIM_MICRO_VERSION = 
OS_SIM_MINOR_VERSION = 
OS_SIM_VERSION = 
PACKAGE = os-sim
PACKAGE_BUGREPORT = 
PACKAGE_NAME = os-sim
PACKAGE_STRING = os-sim 
PACKAGE_TARNAME = os-sim
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/lib/x86_64-linux-gnu/pkgconfig/:/usr/lib/x86_64-linux-gnu/pkgconfig/:/root/gnet-2.0.8/
RANLIB = ranlib
SERVER_API_PORT = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 
abs_builddir = /root/stip-backend/os-sim/src/tests
abs_srcdir = /root/stip-backend/os-sim/src/tests
abs_top_builddir = /root/stip-backend/os-sim
abs_top_srcdir = /root/stip-backend/os-sim
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/stip-backend/os-sim/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
test_load_directives_SOURCES = test-load-directives.c  sim-dummy.c \
		../sim-xml-directive.c \
		../sim-rule.c ../sim-inet.c ../sim-radix.c ../sim-network.c ../sim-net.c ../sim-sensor.c \
		../sim-uuid.c ../sim-plugin.c ../sim-context.c ../sim-host.c ../sim-database.c ../sim-policy.c \
		../sim-role.c ../sim-util.c ../sim-event.c ../sim-plugin-sid.c ../sim-mini-object.c ../sim-text-fields.c ../sim-command.c \
		../sim-engine.c ../sim-directive.c ../sim-directive-group.c ../sim-db-command.c ../sim-server.c ../sim-db-insert.c ../sim-idm-entry.c \
		../sim-idm-anomalies.c ../sim-config.c ../sim-session.c ../sim-container.c ../sim-plugin-state.c ../sim-timetable.c ../sim-idm.c ../sim-timezone.c \
		../sim-geoip.c ../sim-alarm-stats.c ../sim-xml-config.c ../sim-groupalarm.c  ../sim-reputation.c ../sim-connect.c \
		../sim-log.c ../sim-organizer.c ../sim-correlation.c

test_load_directives_CFLAGS = $(LIBGDA_CFLAGS) $(GNET_CFLAGS) \
				$(JSON_GLIB_CFLAGS) \
				$(LIBSOUP_CFLAGS) \
				$(LIBGEOIP_CFLAGS) \
				-I.. -DOS_SIM_GLOBAL_WSD_FILE=\""directives.xsd"\" \
				-DOS_SIM_RUN_FILE=\""."\" \
				-DOS_SIM_VERSION=\""$(OS_SIM_VERSION)"\" \
				-DOS_SIM_GLOBAL_CONFIG_FILE=\""config.xml"\" \
				-DOS_SIM_GLOBAL_DIRECTIVE_FILE=\""directives.xml"\" \
				-DOS_SIM_LOG_DIR=\"".\""

test_load_directives_LDADD = $(LIBGDA_LIBS) $(GNET_LIBS) $(LIBUUID_LIBS) $(JSON_GLIB_LIBS) $(LIBGEOIP_LIBS) $(LIBSOUP_LIBS)
DISTCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

test-load-directives$(EXEEXT): $(test_load_directives_OBJECTS) $(test_load_directives_DEPENDENCIES) $(EXTRA_test_load_directives_DEPENDENCIES) 
	@rm -f test-load-directives$(EXEEXT)
	$(AM_V_CCLD)$(test_load_directives_LINK) $(test_load_directives_OBJECTS) $(test_load_directives_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/test_load_directives-sim-alarm-stats.Po
include ./$(DEPDIR)/test_load_directives-sim-command.Po
include ./$(DEPDIR)/test_load_directives-sim-config.Po
include ./$(DEPDIR)/test_load_directives-sim-connect.Po
include ./$(DEPDIR)/test_load_directives-sim-container.Po
include ./$(DEPDIR)/test_load_directives-sim-context.Po
include ./$(DEPDIR)/test_load_directives-sim-correlation.Po
include ./$(DEPDIR)/test_load_directives-sim-database.Po
include ./$(DEPDIR)/test_load_directives-sim-db-command.Po
include ./$(DEPDIR)/test_load_directives-sim-db-insert.Po
include ./$(DEPDIR)/test_load_directives-sim-directive-group.Po
include ./$(DEPDIR)/test_load_directives-sim-directive.Po
include ./$(DEPDIR)/test_load_directives-sim-dummy.Po
include ./$(DEPDIR)/test_load_directives-sim-engine.Po
include ./$(DEPDIR)/test_load_directives-sim-event.Po
include ./$(DEPDIR)/test_load_directives-sim-geoip.Po
include ./$(DEPDIR)/test_load_directives-sim-groupalarm.Po
include ./$(DEPDIR)/test_load_directives-sim-host.Po
include ./$(DEPDIR)/test_load_directives-sim-idm-anomalies.Po
include ./$(DEPDIR)/test_load_directives-sim-idm-entry.Po
include ./$(DEPDIR)/test_load_directives-sim-idm.Po
include ./$(DEPDIR)/test_load_directives-sim-inet.Po
include ./$(DEPDIR)/test_load_directives-sim-log.Po
include ./$(DEPDIR)/test_load_directives-sim-mini-object.Po
include ./$(DEPDIR)/test_load_directives-sim-net.Po
include ./$(DEPDIR)/test_load_directives-sim-network.Po
include ./$(DEPDIR)/test_load_directives-sim-organizer.Po
include ./$(DEPDIR)/test_load_directives-sim-plugin-sid.Po
include ./$(DEPDIR)/test_load_directives-sim-plugin-state.Po
include ./$(DEPDIR)/test_load_directives-sim-plugin.Po
include ./$(DEPDIR)/test_load_directives-sim-policy.Po
include ./$(DEPDIR)/test_load_directives-sim-radix.Po
include ./$(DEPDIR)/test_load_directives-sim-reputation.Po
include ./$(DEPDIR)/test_load_directives-sim-role.Po
include ./$(DEPDIR)/test_load_directives-sim-rule.Po
include ./$(DEPDIR)/test_load_directives-sim-sensor.Po
include ./$(DEPDIR)/test_load_directives-sim-server.Po
include ./$(DEPDIR)/test_load_directives-sim-session.Po
include ./$(DEPDIR)/test_load_directives-sim-text-fields.Po
include ./$(DEPDIR)/test_load_directives-sim-timetable.Po
include ./$(DEPDIR)/test_load_directives-sim-timezone.Po
include ./$(DEPDIR)/test_load_directives-sim-util.Po
include ./$(DEPDIR)/test_load_directives-sim-uuid.Po
include ./$(DEPDIR)/test_load_directives-sim-xml-config.Po
include ./$(DEPDIR)/test_load_directives-sim-xml-directive.Po
include ./$(DEPDIR)/test_load_directives-test-load-directives.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

test_load_directives-test-load-directives.o: test-load-directives.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-test-load-directives.o -MD -MP -MF $(DEPDIR)/test_load_directives-test-load-directives.Tpo -c -o test_load_directives-test-load-directives.o `test -f 'test-load-directives.c' || echo '$(srcdir)/'`test-load-directives.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-test-load-directives.Tpo $(DEPDIR)/test_load_directives-test-load-directives.Po
#	$(AM_V_CC)source='test-load-directives.c' object='test_load_directives-test-load-directives.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-test-load-directives.o `test -f 'test-load-directives.c' || echo '$(srcdir)/'`test-load-directives.c

test_load_directives-test-load-directives.obj: test-load-directives.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-test-load-directives.obj -MD -MP -MF $(DEPDIR)/test_load_directives-test-load-directives.Tpo -c -o test_load_directives-test-load-directives.obj `if test -f 'test-load-directives.c'; then $(CYGPATH_W) 'test-load-directives.c'; else $(CYGPATH_W) '$(srcdir)/test-load-directives.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-test-load-directives.Tpo $(DEPDIR)/test_load_directives-test-load-directives.Po
#	$(AM_V_CC)source='test-load-directives.c' object='test_load_directives-test-load-directives.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-test-load-directives.obj `if test -f 'test-load-directives.c'; then $(CYGPATH_W) 'test-load-directives.c'; else $(CYGPATH_W) '$(srcdir)/test-load-directives.c'; fi`

test_load_directives-sim-dummy.o: sim-dummy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-dummy.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-dummy.Tpo -c -o test_load_directives-sim-dummy.o `test -f 'sim-dummy.c' || echo '$(srcdir)/'`sim-dummy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-dummy.Tpo $(DEPDIR)/test_load_directives-sim-dummy.Po
#	$(AM_V_CC)source='sim-dummy.c' object='test_load_directives-sim-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-dummy.o `test -f 'sim-dummy.c' || echo '$(srcdir)/'`sim-dummy.c

test_load_directives-sim-dummy.obj: sim-dummy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-dummy.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-dummy.Tpo -c -o test_load_directives-sim-dummy.obj `if test -f 'sim-dummy.c'; then $(CYGPATH_W) 'sim-dummy.c'; else $(CYGPATH_W) '$(srcdir)/sim-dummy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-dummy.Tpo $(DEPDIR)/test_load_directives-sim-dummy.Po
#	$(AM_V_CC)source='sim-dummy.c' object='test_load_directives-sim-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-dummy.obj `if test -f 'sim-dummy.c'; then $(CYGPATH_W) 'sim-dummy.c'; else $(CYGPATH_W) '$(srcdir)/sim-dummy.c'; fi`

test_load_directives-sim-xml-directive.o: ../sim-xml-directive.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-xml-directive.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-xml-directive.Tpo -c -o test_load_directives-sim-xml-directive.o `test -f '../sim-xml-directive.c' || echo '$(srcdir)/'`../sim-xml-directive.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-xml-directive.Tpo $(DEPDIR)/test_load_directives-sim-xml-directive.Po
#	$(AM_V_CC)source='../sim-xml-directive.c' object='test_load_directives-sim-xml-directive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-xml-directive.o `test -f '../sim-xml-directive.c' || echo '$(srcdir)/'`../sim-xml-directive.c

test_load_directives-sim-xml-directive.obj: ../sim-xml-directive.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-xml-directive.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-xml-directive.Tpo -c -o test_load_directives-sim-xml-directive.obj `if test -f '../sim-xml-directive.c'; then $(CYGPATH_W) '../sim-xml-directive.c'; else $(CYGPATH_W) '$(srcdir)/../sim-xml-directive.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-xml-directive.Tpo $(DEPDIR)/test_load_directives-sim-xml-directive.Po
#	$(AM_V_CC)source='../sim-xml-directive.c' object='test_load_directives-sim-xml-directive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-xml-directive.obj `if test -f '../sim-xml-directive.c'; then $(CYGPATH_W) '../sim-xml-directive.c'; else $(CYGPATH_W) '$(srcdir)/../sim-xml-directive.c'; fi`

test_load_directives-sim-rule.o: ../sim-rule.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-rule.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-rule.Tpo -c -o test_load_directives-sim-rule.o `test -f '../sim-rule.c' || echo '$(srcdir)/'`../sim-rule.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-rule.Tpo $(DEPDIR)/test_load_directives-sim-rule.Po
#	$(AM_V_CC)source='../sim-rule.c' object='test_load_directives-sim-rule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-rule.o `test -f '../sim-rule.c' || echo '$(srcdir)/'`../sim-rule.c

test_load_directives-sim-rule.obj: ../sim-rule.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-rule.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-rule.Tpo -c -o test_load_directives-sim-rule.obj `if test -f '../sim-rule.c'; then $(CYGPATH_W) '../sim-rule.c'; else $(CYGPATH_W) '$(srcdir)/../sim-rule.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-rule.Tpo $(DEPDIR)/test_load_directives-sim-rule.Po
#	$(AM_V_CC)source='../sim-rule.c' object='test_load_directives-sim-rule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-rule.obj `if test -f '../sim-rule.c'; then $(CYGPATH_W) '../sim-rule.c'; else $(CYGPATH_W) '$(srcdir)/../sim-rule.c'; fi`

test_load_directives-sim-inet.o: ../sim-inet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-inet.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-inet.Tpo -c -o test_load_directives-sim-inet.o `test -f '../sim-inet.c' || echo '$(srcdir)/'`../sim-inet.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-inet.Tpo $(DEPDIR)/test_load_directives-sim-inet.Po
#	$(AM_V_CC)source='../sim-inet.c' object='test_load_directives-sim-inet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-inet.o `test -f '../sim-inet.c' || echo '$(srcdir)/'`../sim-inet.c

test_load_directives-sim-inet.obj: ../sim-inet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-inet.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-inet.Tpo -c -o test_load_directives-sim-inet.obj `if test -f '../sim-inet.c'; then $(CYGPATH_W) '../sim-inet.c'; else $(CYGPATH_W) '$(srcdir)/../sim-inet.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-inet.Tpo $(DEPDIR)/test_load_directives-sim-inet.Po
#	$(AM_V_CC)source='../sim-inet.c' object='test_load_directives-sim-inet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-inet.obj `if test -f '../sim-inet.c'; then $(CYGPATH_W) '../sim-inet.c'; else $(CYGPATH_W) '$(srcdir)/../sim-inet.c'; fi`

test_load_directives-sim-radix.o: ../sim-radix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-radix.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-radix.Tpo -c -o test_load_directives-sim-radix.o `test -f '../sim-radix.c' || echo '$(srcdir)/'`../sim-radix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-radix.Tpo $(DEPDIR)/test_load_directives-sim-radix.Po
#	$(AM_V_CC)source='../sim-radix.c' object='test_load_directives-sim-radix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-radix.o `test -f '../sim-radix.c' || echo '$(srcdir)/'`../sim-radix.c

test_load_directives-sim-radix.obj: ../sim-radix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-radix.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-radix.Tpo -c -o test_load_directives-sim-radix.obj `if test -f '../sim-radix.c'; then $(CYGPATH_W) '../sim-radix.c'; else $(CYGPATH_W) '$(srcdir)/../sim-radix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-radix.Tpo $(DEPDIR)/test_load_directives-sim-radix.Po
#	$(AM_V_CC)source='../sim-radix.c' object='test_load_directives-sim-radix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-radix.obj `if test -f '../sim-radix.c'; then $(CYGPATH_W) '../sim-radix.c'; else $(CYGPATH_W) '$(srcdir)/../sim-radix.c'; fi`

test_load_directives-sim-network.o: ../sim-network.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-network.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-network.Tpo -c -o test_load_directives-sim-network.o `test -f '../sim-network.c' || echo '$(srcdir)/'`../sim-network.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-network.Tpo $(DEPDIR)/test_load_directives-sim-network.Po
#	$(AM_V_CC)source='../sim-network.c' object='test_load_directives-sim-network.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-network.o `test -f '../sim-network.c' || echo '$(srcdir)/'`../sim-network.c

test_load_directives-sim-network.obj: ../sim-network.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-network.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-network.Tpo -c -o test_load_directives-sim-network.obj `if test -f '../sim-network.c'; then $(CYGPATH_W) '../sim-network.c'; else $(CYGPATH_W) '$(srcdir)/../sim-network.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-network.Tpo $(DEPDIR)/test_load_directives-sim-network.Po
#	$(AM_V_CC)source='../sim-network.c' object='test_load_directives-sim-network.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-network.obj `if test -f '../sim-network.c'; then $(CYGPATH_W) '../sim-network.c'; else $(CYGPATH_W) '$(srcdir)/../sim-network.c'; fi`

test_load_directives-sim-net.o: ../sim-net.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-net.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-net.Tpo -c -o test_load_directives-sim-net.o `test -f '../sim-net.c' || echo '$(srcdir)/'`../sim-net.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-net.Tpo $(DEPDIR)/test_load_directives-sim-net.Po
#	$(AM_V_CC)source='../sim-net.c' object='test_load_directives-sim-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-net.o `test -f '../sim-net.c' || echo '$(srcdir)/'`../sim-net.c

test_load_directives-sim-net.obj: ../sim-net.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-net.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-net.Tpo -c -o test_load_directives-sim-net.obj `if test -f '../sim-net.c'; then $(CYGPATH_W) '../sim-net.c'; else $(CYGPATH_W) '$(srcdir)/../sim-net.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-net.Tpo $(DEPDIR)/test_load_directives-sim-net.Po
#	$(AM_V_CC)source='../sim-net.c' object='test_load_directives-sim-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-net.obj `if test -f '../sim-net.c'; then $(CYGPATH_W) '../sim-net.c'; else $(CYGPATH_W) '$(srcdir)/../sim-net.c'; fi`

test_load_directives-sim-sensor.o: ../sim-sensor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-sensor.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-sensor.Tpo -c -o test_load_directives-sim-sensor.o `test -f '../sim-sensor.c' || echo '$(srcdir)/'`../sim-sensor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-sensor.Tpo $(DEPDIR)/test_load_directives-sim-sensor.Po
#	$(AM_V_CC)source='../sim-sensor.c' object='test_load_directives-sim-sensor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-sensor.o `test -f '../sim-sensor.c' || echo '$(srcdir)/'`../sim-sensor.c

test_load_directives-sim-sensor.obj: ../sim-sensor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-sensor.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-sensor.Tpo -c -o test_load_directives-sim-sensor.obj `if test -f '../sim-sensor.c'; then $(CYGPATH_W) '../sim-sensor.c'; else $(CYGPATH_W) '$(srcdir)/../sim-sensor.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-sensor.Tpo $(DEPDIR)/test_load_directives-sim-sensor.Po
#	$(AM_V_CC)source='../sim-sensor.c' object='test_load_directives-sim-sensor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-sensor.obj `if test -f '../sim-sensor.c'; then $(CYGPATH_W) '../sim-sensor.c'; else $(CYGPATH_W) '$(srcdir)/../sim-sensor.c'; fi`

test_load_directives-sim-uuid.o: ../sim-uuid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-uuid.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-uuid.Tpo -c -o test_load_directives-sim-uuid.o `test -f '../sim-uuid.c' || echo '$(srcdir)/'`../sim-uuid.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-uuid.Tpo $(DEPDIR)/test_load_directives-sim-uuid.Po
#	$(AM_V_CC)source='../sim-uuid.c' object='test_load_directives-sim-uuid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-uuid.o `test -f '../sim-uuid.c' || echo '$(srcdir)/'`../sim-uuid.c

test_load_directives-sim-uuid.obj: ../sim-uuid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-uuid.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-uuid.Tpo -c -o test_load_directives-sim-uuid.obj `if test -f '../sim-uuid.c'; then $(CYGPATH_W) '../sim-uuid.c'; else $(CYGPATH_W) '$(srcdir)/../sim-uuid.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-uuid.Tpo $(DEPDIR)/test_load_directives-sim-uuid.Po
#	$(AM_V_CC)source='../sim-uuid.c' object='test_load_directives-sim-uuid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-uuid.obj `if test -f '../sim-uuid.c'; then $(CYGPATH_W) '../sim-uuid.c'; else $(CYGPATH_W) '$(srcdir)/../sim-uuid.c'; fi`

test_load_directives-sim-plugin.o: ../sim-plugin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-plugin.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-plugin.Tpo -c -o test_load_directives-sim-plugin.o `test -f '../sim-plugin.c' || echo '$(srcdir)/'`../sim-plugin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-plugin.Tpo $(DEPDIR)/test_load_directives-sim-plugin.Po
#	$(AM_V_CC)source='../sim-plugin.c' object='test_load_directives-sim-plugin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-plugin.o `test -f '../sim-plugin.c' || echo '$(srcdir)/'`../sim-plugin.c

test_load_directives-sim-plugin.obj: ../sim-plugin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-plugin.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-plugin.Tpo -c -o test_load_directives-sim-plugin.obj `if test -f '../sim-plugin.c'; then $(CYGPATH_W) '../sim-plugin.c'; else $(CYGPATH_W) '$(srcdir)/../sim-plugin.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-plugin.Tpo $(DEPDIR)/test_load_directives-sim-plugin.Po
#	$(AM_V_CC)source='../sim-plugin.c' object='test_load_directives-sim-plugin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-plugin.obj `if test -f '../sim-plugin.c'; then $(CYGPATH_W) '../sim-plugin.c'; else $(CYGPATH_W) '$(srcdir)/../sim-plugin.c'; fi`

test_load_directives-sim-context.o: ../sim-context.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-context.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-context.Tpo -c -o test_load_directives-sim-context.o `test -f '../sim-context.c' || echo '$(srcdir)/'`../sim-context.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-context.Tpo $(DEPDIR)/test_load_directives-sim-context.Po
#	$(AM_V_CC)source='../sim-context.c' object='test_load_directives-sim-context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-context.o `test -f '../sim-context.c' || echo '$(srcdir)/'`../sim-context.c

test_load_directives-sim-context.obj: ../sim-context.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-context.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-context.Tpo -c -o test_load_directives-sim-context.obj `if test -f '../sim-context.c'; then $(CYGPATH_W) '../sim-context.c'; else $(CYGPATH_W) '$(srcdir)/../sim-context.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-context.Tpo $(DEPDIR)/test_load_directives-sim-context.Po
#	$(AM_V_CC)source='../sim-context.c' object='test_load_directives-sim-context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-context.obj `if test -f '../sim-context.c'; then $(CYGPATH_W) '../sim-context.c'; else $(CYGPATH_W) '$(srcdir)/../sim-context.c'; fi`

test_load_directives-sim-host.o: ../sim-host.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-host.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-host.Tpo -c -o test_load_directives-sim-host.o `test -f '../sim-host.c' || echo '$(srcdir)/'`../sim-host.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-host.Tpo $(DEPDIR)/test_load_directives-sim-host.Po
#	$(AM_V_CC)source='../sim-host.c' object='test_load_directives-sim-host.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-host.o `test -f '../sim-host.c' || echo '$(srcdir)/'`../sim-host.c

test_load_directives-sim-host.obj: ../sim-host.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-host.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-host.Tpo -c -o test_load_directives-sim-host.obj `if test -f '../sim-host.c'; then $(CYGPATH_W) '../sim-host.c'; else $(CYGPATH_W) '$(srcdir)/../sim-host.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-host.Tpo $(DEPDIR)/test_load_directives-sim-host.Po
#	$(AM_V_CC)source='../sim-host.c' object='test_load_directives-sim-host.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-host.obj `if test -f '../sim-host.c'; then $(CYGPATH_W) '../sim-host.c'; else $(CYGPATH_W) '$(srcdir)/../sim-host.c'; fi`

test_load_directives-sim-database.o: ../sim-database.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-database.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-database.Tpo -c -o test_load_directives-sim-database.o `test -f '../sim-database.c' || echo '$(srcdir)/'`../sim-database.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-database.Tpo $(DEPDIR)/test_load_directives-sim-database.Po
#	$(AM_V_CC)source='../sim-database.c' object='test_load_directives-sim-database.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-database.o `test -f '../sim-database.c' || echo '$(srcdir)/'`../sim-database.c

test_load_directives-sim-database.obj: ../sim-database.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-database.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-database.Tpo -c -o test_load_directives-sim-database.obj `if test -f '../sim-database.c'; then $(CYGPATH_W) '../sim-database.c'; else $(CYGPATH_W) '$(srcdir)/../sim-database.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-database.Tpo $(DEPDIR)/test_load_directives-sim-database.Po
#	$(AM_V_CC)source='../sim-database.c' object='test_load_directives-sim-database.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-database.obj `if test -f '../sim-database.c'; then $(CYGPATH_W) '../sim-database.c'; else $(CYGPATH_W) '$(srcdir)/../sim-database.c'; fi`

test_load_directives-sim-policy.o: ../sim-policy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-policy.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-policy.Tpo -c -o test_load_directives-sim-policy.o `test -f '../sim-policy.c' || echo '$(srcdir)/'`../sim-policy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-policy.Tpo $(DEPDIR)/test_load_directives-sim-policy.Po
#	$(AM_V_CC)source='../sim-policy.c' object='test_load_directives-sim-policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-policy.o `test -f '../sim-policy.c' || echo '$(srcdir)/'`../sim-policy.c

test_load_directives-sim-policy.obj: ../sim-policy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-policy.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-policy.Tpo -c -o test_load_directives-sim-policy.obj `if test -f '../sim-policy.c'; then $(CYGPATH_W) '../sim-policy.c'; else $(CYGPATH_W) '$(srcdir)/../sim-policy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-policy.Tpo $(DEPDIR)/test_load_directives-sim-policy.Po
#	$(AM_V_CC)source='../sim-policy.c' object='test_load_directives-sim-policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-policy.obj `if test -f '../sim-policy.c'; then $(CYGPATH_W) '../sim-policy.c'; else $(CYGPATH_W) '$(srcdir)/../sim-policy.c'; fi`

test_load_directives-sim-role.o: ../sim-role.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-role.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-role.Tpo -c -o test_load_directives-sim-role.o `test -f '../sim-role.c' || echo '$(srcdir)/'`../sim-role.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-role.Tpo $(DEPDIR)/test_load_directives-sim-role.Po
#	$(AM_V_CC)source='../sim-role.c' object='test_load_directives-sim-role.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-role.o `test -f '../sim-role.c' || echo '$(srcdir)/'`../sim-role.c

test_load_directives-sim-role.obj: ../sim-role.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-role.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-role.Tpo -c -o test_load_directives-sim-role.obj `if test -f '../sim-role.c'; then $(CYGPATH_W) '../sim-role.c'; else $(CYGPATH_W) '$(srcdir)/../sim-role.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-role.Tpo $(DEPDIR)/test_load_directives-sim-role.Po
#	$(AM_V_CC)source='../sim-role.c' object='test_load_directives-sim-role.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-role.obj `if test -f '../sim-role.c'; then $(CYGPATH_W) '../sim-role.c'; else $(CYGPATH_W) '$(srcdir)/../sim-role.c'; fi`

test_load_directives-sim-util.o: ../sim-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-util.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-util.Tpo -c -o test_load_directives-sim-util.o `test -f '../sim-util.c' || echo '$(srcdir)/'`../sim-util.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-util.Tpo $(DEPDIR)/test_load_directives-sim-util.Po
#	$(AM_V_CC)source='../sim-util.c' object='test_load_directives-sim-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-util.o `test -f '../sim-util.c' || echo '$(srcdir)/'`../sim-util.c

test_load_directives-sim-util.obj: ../sim-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-util.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-util.Tpo -c -o test_load_directives-sim-util.obj `if test -f '../sim-util.c'; then $(CYGPATH_W) '../sim-util.c'; else $(CYGPATH_W) '$(srcdir)/../sim-util.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-util.Tpo $(DEPDIR)/test_load_directives-sim-util.Po
#	$(AM_V_CC)source='../sim-util.c' object='test_load_directives-sim-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-util.obj `if test -f '../sim-util.c'; then $(CYGPATH_W) '../sim-util.c'; else $(CYGPATH_W) '$(srcdir)/../sim-util.c'; fi`

test_load_directives-sim-event.o: ../sim-event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-event.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-event.Tpo -c -o test_load_directives-sim-event.o `test -f '../sim-event.c' || echo '$(srcdir)/'`../sim-event.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-event.Tpo $(DEPDIR)/test_load_directives-sim-event.Po
#	$(AM_V_CC)source='../sim-event.c' object='test_load_directives-sim-event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-event.o `test -f '../sim-event.c' || echo '$(srcdir)/'`../sim-event.c

test_load_directives-sim-event.obj: ../sim-event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-event.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-event.Tpo -c -o test_load_directives-sim-event.obj `if test -f '../sim-event.c'; then $(CYGPATH_W) '../sim-event.c'; else $(CYGPATH_W) '$(srcdir)/../sim-event.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-event.Tpo $(DEPDIR)/test_load_directives-sim-event.Po
#	$(AM_V_CC)source='../sim-event.c' object='test_load_directives-sim-event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-event.obj `if test -f '../sim-event.c'; then $(CYGPATH_W) '../sim-event.c'; else $(CYGPATH_W) '$(srcdir)/../sim-event.c'; fi`

test_load_directives-sim-plugin-sid.o: ../sim-plugin-sid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-plugin-sid.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-plugin-sid.Tpo -c -o test_load_directives-sim-plugin-sid.o `test -f '../sim-plugin-sid.c' || echo '$(srcdir)/'`../sim-plugin-sid.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-plugin-sid.Tpo $(DEPDIR)/test_load_directives-sim-plugin-sid.Po
#	$(AM_V_CC)source='../sim-plugin-sid.c' object='test_load_directives-sim-plugin-sid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-plugin-sid.o `test -f '../sim-plugin-sid.c' || echo '$(srcdir)/'`../sim-plugin-sid.c

test_load_directives-sim-plugin-sid.obj: ../sim-plugin-sid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-plugin-sid.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-plugin-sid.Tpo -c -o test_load_directives-sim-plugin-sid.obj `if test -f '../sim-plugin-sid.c'; then $(CYGPATH_W) '../sim-plugin-sid.c'; else $(CYGPATH_W) '$(srcdir)/../sim-plugin-sid.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-plugin-sid.Tpo $(DEPDIR)/test_load_directives-sim-plugin-sid.Po
#	$(AM_V_CC)source='../sim-plugin-sid.c' object='test_load_directives-sim-plugin-sid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-plugin-sid.obj `if test -f '../sim-plugin-sid.c'; then $(CYGPATH_W) '../sim-plugin-sid.c'; else $(CYGPATH_W) '$(srcdir)/../sim-plugin-sid.c'; fi`

test_load_directives-sim-mini-object.o: ../sim-mini-object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-mini-object.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-mini-object.Tpo -c -o test_load_directives-sim-mini-object.o `test -f '../sim-mini-object.c' || echo '$(srcdir)/'`../sim-mini-object.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-mini-object.Tpo $(DEPDIR)/test_load_directives-sim-mini-object.Po
#	$(AM_V_CC)source='../sim-mini-object.c' object='test_load_directives-sim-mini-object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-mini-object.o `test -f '../sim-mini-object.c' || echo '$(srcdir)/'`../sim-mini-object.c

test_load_directives-sim-mini-object.obj: ../sim-mini-object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-mini-object.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-mini-object.Tpo -c -o test_load_directives-sim-mini-object.obj `if test -f '../sim-mini-object.c'; then $(CYGPATH_W) '../sim-mini-object.c'; else $(CYGPATH_W) '$(srcdir)/../sim-mini-object.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-mini-object.Tpo $(DEPDIR)/test_load_directives-sim-mini-object.Po
#	$(AM_V_CC)source='../sim-mini-object.c' object='test_load_directives-sim-mini-object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-mini-object.obj `if test -f '../sim-mini-object.c'; then $(CYGPATH_W) '../sim-mini-object.c'; else $(CYGPATH_W) '$(srcdir)/../sim-mini-object.c'; fi`

test_load_directives-sim-text-fields.o: ../sim-text-fields.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-text-fields.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-text-fields.Tpo -c -o test_load_directives-sim-text-fields.o `test -f '../sim-text-fields.c' || echo '$(srcdir)/'`../sim-text-fields.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-text-fields.Tpo $(DEPDIR)/test_load_directives-sim-text-fields.Po
#	$(AM_V_CC)source='../sim-text-fields.c' object='test_load_directives-sim-text-fields.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-text-fields.o `test -f '../sim-text-fields.c' || echo '$(srcdir)/'`../sim-text-fields.c

test_load_directives-sim-text-fields.obj: ../sim-text-fields.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-text-fields.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-text-fields.Tpo -c -o test_load_directives-sim-text-fields.obj `if test -f '../sim-text-fields.c'; then $(CYGPATH_W) '../sim-text-fields.c'; else $(CYGPATH_W) '$(srcdir)/../sim-text-fields.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-text-fields.Tpo $(DEPDIR)/test_load_directives-sim-text-fields.Po
#	$(AM_V_CC)source='../sim-text-fields.c' object='test_load_directives-sim-text-fields.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-text-fields.obj `if test -f '../sim-text-fields.c'; then $(CYGPATH_W) '../sim-text-fields.c'; else $(CYGPATH_W) '$(srcdir)/../sim-text-fields.c'; fi`

test_load_directives-sim-command.o: ../sim-command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-command.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-command.Tpo -c -o test_load_directives-sim-command.o `test -f '../sim-command.c' || echo '$(srcdir)/'`../sim-command.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-command.Tpo $(DEPDIR)/test_load_directives-sim-command.Po
#	$(AM_V_CC)source='../sim-command.c' object='test_load_directives-sim-command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-command.o `test -f '../sim-command.c' || echo '$(srcdir)/'`../sim-command.c

test_load_directives-sim-command.obj: ../sim-command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-command.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-command.Tpo -c -o test_load_directives-sim-command.obj `if test -f '../sim-command.c'; then $(CYGPATH_W) '../sim-command.c'; else $(CYGPATH_W) '$(srcdir)/../sim-command.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-command.Tpo $(DEPDIR)/test_load_directives-sim-command.Po
#	$(AM_V_CC)source='../sim-command.c' object='test_load_directives-sim-command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-command.obj `if test -f '../sim-command.c'; then $(CYGPATH_W) '../sim-command.c'; else $(CYGPATH_W) '$(srcdir)/../sim-command.c'; fi`

test_load_directives-sim-engine.o: ../sim-engine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-engine.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-engine.Tpo -c -o test_load_directives-sim-engine.o `test -f '../sim-engine.c' || echo '$(srcdir)/'`../sim-engine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-engine.Tpo $(DEPDIR)/test_load_directives-sim-engine.Po
#	$(AM_V_CC)source='../sim-engine.c' object='test_load_directives-sim-engine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-engine.o `test -f '../sim-engine.c' || echo '$(srcdir)/'`../sim-engine.c

test_load_directives-sim-engine.obj: ../sim-engine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-engine.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-engine.Tpo -c -o test_load_directives-sim-engine.obj `if test -f '../sim-engine.c'; then $(CYGPATH_W) '../sim-engine.c'; else $(CYGPATH_W) '$(srcdir)/../sim-engine.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-engine.Tpo $(DEPDIR)/test_load_directives-sim-engine.Po
#	$(AM_V_CC)source='../sim-engine.c' object='test_load_directives-sim-engine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-engine.obj `if test -f '../sim-engine.c'; then $(CYGPATH_W) '../sim-engine.c'; else $(CYGPATH_W) '$(srcdir)/../sim-engine.c'; fi`

test_load_directives-sim-directive.o: ../sim-directive.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-directive.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-directive.Tpo -c -o test_load_directives-sim-directive.o `test -f '../sim-directive.c' || echo '$(srcdir)/'`../sim-directive.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-directive.Tpo $(DEPDIR)/test_load_directives-sim-directive.Po
#	$(AM_V_CC)source='../sim-directive.c' object='test_load_directives-sim-directive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-directive.o `test -f '../sim-directive.c' || echo '$(srcdir)/'`../sim-directive.c

test_load_directives-sim-directive.obj: ../sim-directive.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-directive.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-directive.Tpo -c -o test_load_directives-sim-directive.obj `if test -f '../sim-directive.c'; then $(CYGPATH_W) '../sim-directive.c'; else $(CYGPATH_W) '$(srcdir)/../sim-directive.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-directive.Tpo $(DEPDIR)/test_load_directives-sim-directive.Po
#	$(AM_V_CC)source='../sim-directive.c' object='test_load_directives-sim-directive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-directive.obj `if test -f '../sim-directive.c'; then $(CYGPATH_W) '../sim-directive.c'; else $(CYGPATH_W) '$(srcdir)/../sim-directive.c'; fi`

test_load_directives-sim-directive-group.o: ../sim-directive-group.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-directive-group.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-directive-group.Tpo -c -o test_load_directives-sim-directive-group.o `test -f '../sim-directive-group.c' || echo '$(srcdir)/'`../sim-directive-group.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-directive-group.Tpo $(DEPDIR)/test_load_directives-sim-directive-group.Po
#	$(AM_V_CC)source='../sim-directive-group.c' object='test_load_directives-sim-directive-group.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-directive-group.o `test -f '../sim-directive-group.c' || echo '$(srcdir)/'`../sim-directive-group.c

test_load_directives-sim-directive-group.obj: ../sim-directive-group.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-directive-group.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-directive-group.Tpo -c -o test_load_directives-sim-directive-group.obj `if test -f '../sim-directive-group.c'; then $(CYGPATH_W) '../sim-directive-group.c'; else $(CYGPATH_W) '$(srcdir)/../sim-directive-group.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-directive-group.Tpo $(DEPDIR)/test_load_directives-sim-directive-group.Po
#	$(AM_V_CC)source='../sim-directive-group.c' object='test_load_directives-sim-directive-group.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-directive-group.obj `if test -f '../sim-directive-group.c'; then $(CYGPATH_W) '../sim-directive-group.c'; else $(CYGPATH_W) '$(srcdir)/../sim-directive-group.c'; fi`

test_load_directives-sim-db-command.o: ../sim-db-command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-db-command.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-db-command.Tpo -c -o test_load_directives-sim-db-command.o `test -f '../sim-db-command.c' || echo '$(srcdir)/'`../sim-db-command.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-db-command.Tpo $(DEPDIR)/test_load_directives-sim-db-command.Po
#	$(AM_V_CC)source='../sim-db-command.c' object='test_load_directives-sim-db-command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-db-command.o `test -f '../sim-db-command.c' || echo '$(srcdir)/'`../sim-db-command.c

test_load_directives-sim-db-command.obj: ../sim-db-command.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-db-command.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-db-command.Tpo -c -o test_load_directives-sim-db-command.obj `if test -f '../sim-db-command.c'; then $(CYGPATH_W) '../sim-db-command.c'; else $(CYGPATH_W) '$(srcdir)/../sim-db-command.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-db-command.Tpo $(DEPDIR)/test_load_directives-sim-db-command.Po
#	$(AM_V_CC)source='../sim-db-command.c' object='test_load_directives-sim-db-command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-db-command.obj `if test -f '../sim-db-command.c'; then $(CYGPATH_W) '../sim-db-command.c'; else $(CYGPATH_W) '$(srcdir)/../sim-db-command.c'; fi`

test_load_directives-sim-server.o: ../sim-server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-server.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-server.Tpo -c -o test_load_directives-sim-server.o `test -f '../sim-server.c' || echo '$(srcdir)/'`../sim-server.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-server.Tpo $(DEPDIR)/test_load_directives-sim-server.Po
#	$(AM_V_CC)source='../sim-server.c' object='test_load_directives-sim-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-server.o `test -f '../sim-server.c' || echo '$(srcdir)/'`../sim-server.c

test_load_directives-sim-server.obj: ../sim-server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-server.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-server.Tpo -c -o test_load_directives-sim-server.obj `if test -f '../sim-server.c'; then $(CYGPATH_W) '../sim-server.c'; else $(CYGPATH_W) '$(srcdir)/../sim-server.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-server.Tpo $(DEPDIR)/test_load_directives-sim-server.Po
#	$(AM_V_CC)source='../sim-server.c' object='test_load_directives-sim-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-server.obj `if test -f '../sim-server.c'; then $(CYGPATH_W) '../sim-server.c'; else $(CYGPATH_W) '$(srcdir)/../sim-server.c'; fi`

test_load_directives-sim-db-insert.o: ../sim-db-insert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-db-insert.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-db-insert.Tpo -c -o test_load_directives-sim-db-insert.o `test -f '../sim-db-insert.c' || echo '$(srcdir)/'`../sim-db-insert.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-db-insert.Tpo $(DEPDIR)/test_load_directives-sim-db-insert.Po
#	$(AM_V_CC)source='../sim-db-insert.c' object='test_load_directives-sim-db-insert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-db-insert.o `test -f '../sim-db-insert.c' || echo '$(srcdir)/'`../sim-db-insert.c

test_load_directives-sim-db-insert.obj: ../sim-db-insert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-db-insert.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-db-insert.Tpo -c -o test_load_directives-sim-db-insert.obj `if test -f '../sim-db-insert.c'; then $(CYGPATH_W) '../sim-db-insert.c'; else $(CYGPATH_W) '$(srcdir)/../sim-db-insert.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-db-insert.Tpo $(DEPDIR)/test_load_directives-sim-db-insert.Po
#	$(AM_V_CC)source='../sim-db-insert.c' object='test_load_directives-sim-db-insert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-db-insert.obj `if test -f '../sim-db-insert.c'; then $(CYGPATH_W) '../sim-db-insert.c'; else $(CYGPATH_W) '$(srcdir)/../sim-db-insert.c'; fi`

test_load_directives-sim-idm-entry.o: ../sim-idm-entry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-idm-entry.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-idm-entry.Tpo -c -o test_load_directives-sim-idm-entry.o `test -f '../sim-idm-entry.c' || echo '$(srcdir)/'`../sim-idm-entry.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-idm-entry.Tpo $(DEPDIR)/test_load_directives-sim-idm-entry.Po
#	$(AM_V_CC)source='../sim-idm-entry.c' object='test_load_directives-sim-idm-entry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-idm-entry.o `test -f '../sim-idm-entry.c' || echo '$(srcdir)/'`../sim-idm-entry.c

test_load_directives-sim-idm-entry.obj: ../sim-idm-entry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-idm-entry.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-idm-entry.Tpo -c -o test_load_directives-sim-idm-entry.obj `if test -f '../sim-idm-entry.c'; then $(CYGPATH_W) '../sim-idm-entry.c'; else $(CYGPATH_W) '$(srcdir)/../sim-idm-entry.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-idm-entry.Tpo $(DEPDIR)/test_load_directives-sim-idm-entry.Po
#	$(AM_V_CC)source='../sim-idm-entry.c' object='test_load_directives-sim-idm-entry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-idm-entry.obj `if test -f '../sim-idm-entry.c'; then $(CYGPATH_W) '../sim-idm-entry.c'; else $(CYGPATH_W) '$(srcdir)/../sim-idm-entry.c'; fi`

test_load_directives-sim-idm-anomalies.o: ../sim-idm-anomalies.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-idm-anomalies.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-idm-anomalies.Tpo -c -o test_load_directives-sim-idm-anomalies.o `test -f '../sim-idm-anomalies.c' || echo '$(srcdir)/'`../sim-idm-anomalies.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-idm-anomalies.Tpo $(DEPDIR)/test_load_directives-sim-idm-anomalies.Po
#	$(AM_V_CC)source='../sim-idm-anomalies.c' object='test_load_directives-sim-idm-anomalies.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-idm-anomalies.o `test -f '../sim-idm-anomalies.c' || echo '$(srcdir)/'`../sim-idm-anomalies.c

test_load_directives-sim-idm-anomalies.obj: ../sim-idm-anomalies.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-idm-anomalies.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-idm-anomalies.Tpo -c -o test_load_directives-sim-idm-anomalies.obj `if test -f '../sim-idm-anomalies.c'; then $(CYGPATH_W) '../sim-idm-anomalies.c'; else $(CYGPATH_W) '$(srcdir)/../sim-idm-anomalies.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-idm-anomalies.Tpo $(DEPDIR)/test_load_directives-sim-idm-anomalies.Po
#	$(AM_V_CC)source='../sim-idm-anomalies.c' object='test_load_directives-sim-idm-anomalies.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-idm-anomalies.obj `if test -f '../sim-idm-anomalies.c'; then $(CYGPATH_W) '../sim-idm-anomalies.c'; else $(CYGPATH_W) '$(srcdir)/../sim-idm-anomalies.c'; fi`

test_load_directives-sim-config.o: ../sim-config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-config.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-config.Tpo -c -o test_load_directives-sim-config.o `test -f '../sim-config.c' || echo '$(srcdir)/'`../sim-config.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-config.Tpo $(DEPDIR)/test_load_directives-sim-config.Po
#	$(AM_V_CC)source='../sim-config.c' object='test_load_directives-sim-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-config.o `test -f '../sim-config.c' || echo '$(srcdir)/'`../sim-config.c

test_load_directives-sim-config.obj: ../sim-config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-config.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-config.Tpo -c -o test_load_directives-sim-config.obj `if test -f '../sim-config.c'; then $(CYGPATH_W) '../sim-config.c'; else $(CYGPATH_W) '$(srcdir)/../sim-config.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-config.Tpo $(DEPDIR)/test_load_directives-sim-config.Po
#	$(AM_V_CC)source='../sim-config.c' object='test_load_directives-sim-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-config.obj `if test -f '../sim-config.c'; then $(CYGPATH_W) '../sim-config.c'; else $(CYGPATH_W) '$(srcdir)/../sim-config.c'; fi`

test_load_directives-sim-session.o: ../sim-session.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-session.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-session.Tpo -c -o test_load_directives-sim-session.o `test -f '../sim-session.c' || echo '$(srcdir)/'`../sim-session.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-session.Tpo $(DEPDIR)/test_load_directives-sim-session.Po
#	$(AM_V_CC)source='../sim-session.c' object='test_load_directives-sim-session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-session.o `test -f '../sim-session.c' || echo '$(srcdir)/'`../sim-session.c

test_load_directives-sim-session.obj: ../sim-session.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-session.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-session.Tpo -c -o test_load_directives-sim-session.obj `if test -f '../sim-session.c'; then $(CYGPATH_W) '../sim-session.c'; else $(CYGPATH_W) '$(srcdir)/../sim-session.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-session.Tpo $(DEPDIR)/test_load_directives-sim-session.Po
#	$(AM_V_CC)source='../sim-session.c' object='test_load_directives-sim-session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-session.obj `if test -f '../sim-session.c'; then $(CYGPATH_W) '../sim-session.c'; else $(CYGPATH_W) '$(srcdir)/../sim-session.c'; fi`

test_load_directives-sim-container.o: ../sim-container.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-container.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-container.Tpo -c -o test_load_directives-sim-container.o `test -f '../sim-container.c' || echo '$(srcdir)/'`../sim-container.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-container.Tpo $(DEPDIR)/test_load_directives-sim-container.Po
#	$(AM_V_CC)source='../sim-container.c' object='test_load_directives-sim-container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-container.o `test -f '../sim-container.c' || echo '$(srcdir)/'`../sim-container.c

test_load_directives-sim-container.obj: ../sim-container.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-container.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-container.Tpo -c -o test_load_directives-sim-container.obj `if test -f '../sim-container.c'; then $(CYGPATH_W) '../sim-container.c'; else $(CYGPATH_W) '$(srcdir)/../sim-container.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-container.Tpo $(DEPDIR)/test_load_directives-sim-container.Po
#	$(AM_V_CC)source='../sim-container.c' object='test_load_directives-sim-container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-container.obj `if test -f '../sim-container.c'; then $(CYGPATH_W) '../sim-container.c'; else $(CYGPATH_W) '$(srcdir)/../sim-container.c'; fi`

test_load_directives-sim-plugin-state.o: ../sim-plugin-state.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-plugin-state.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-plugin-state.Tpo -c -o test_load_directives-sim-plugin-state.o `test -f '../sim-plugin-state.c' || echo '$(srcdir)/'`../sim-plugin-state.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-plugin-state.Tpo $(DEPDIR)/test_load_directives-sim-plugin-state.Po
#	$(AM_V_CC)source='../sim-plugin-state.c' object='test_load_directives-sim-plugin-state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-plugin-state.o `test -f '../sim-plugin-state.c' || echo '$(srcdir)/'`../sim-plugin-state.c

test_load_directives-sim-plugin-state.obj: ../sim-plugin-state.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-plugin-state.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-plugin-state.Tpo -c -o test_load_directives-sim-plugin-state.obj `if test -f '../sim-plugin-state.c'; then $(CYGPATH_W) '../sim-plugin-state.c'; else $(CYGPATH_W) '$(srcdir)/../sim-plugin-state.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-plugin-state.Tpo $(DEPDIR)/test_load_directives-sim-plugin-state.Po
#	$(AM_V_CC)source='../sim-plugin-state.c' object='test_load_directives-sim-plugin-state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-plugin-state.obj `if test -f '../sim-plugin-state.c'; then $(CYGPATH_W) '../sim-plugin-state.c'; else $(CYGPATH_W) '$(srcdir)/../sim-plugin-state.c'; fi`

test_load_directives-sim-timetable.o: ../sim-timetable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-timetable.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-timetable.Tpo -c -o test_load_directives-sim-timetable.o `test -f '../sim-timetable.c' || echo '$(srcdir)/'`../sim-timetable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-timetable.Tpo $(DEPDIR)/test_load_directives-sim-timetable.Po
#	$(AM_V_CC)source='../sim-timetable.c' object='test_load_directives-sim-timetable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-timetable.o `test -f '../sim-timetable.c' || echo '$(srcdir)/'`../sim-timetable.c

test_load_directives-sim-timetable.obj: ../sim-timetable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-timetable.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-timetable.Tpo -c -o test_load_directives-sim-timetable.obj `if test -f '../sim-timetable.c'; then $(CYGPATH_W) '../sim-timetable.c'; else $(CYGPATH_W) '$(srcdir)/../sim-timetable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-timetable.Tpo $(DEPDIR)/test_load_directives-sim-timetable.Po
#	$(AM_V_CC)source='../sim-timetable.c' object='test_load_directives-sim-timetable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-timetable.obj `if test -f '../sim-timetable.c'; then $(CYGPATH_W) '../sim-timetable.c'; else $(CYGPATH_W) '$(srcdir)/../sim-timetable.c'; fi`

test_load_directives-sim-idm.o: ../sim-idm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-idm.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-idm.Tpo -c -o test_load_directives-sim-idm.o `test -f '../sim-idm.c' || echo '$(srcdir)/'`../sim-idm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-idm.Tpo $(DEPDIR)/test_load_directives-sim-idm.Po
#	$(AM_V_CC)source='../sim-idm.c' object='test_load_directives-sim-idm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-idm.o `test -f '../sim-idm.c' || echo '$(srcdir)/'`../sim-idm.c

test_load_directives-sim-idm.obj: ../sim-idm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-idm.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-idm.Tpo -c -o test_load_directives-sim-idm.obj `if test -f '../sim-idm.c'; then $(CYGPATH_W) '../sim-idm.c'; else $(CYGPATH_W) '$(srcdir)/../sim-idm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-idm.Tpo $(DEPDIR)/test_load_directives-sim-idm.Po
#	$(AM_V_CC)source='../sim-idm.c' object='test_load_directives-sim-idm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-idm.obj `if test -f '../sim-idm.c'; then $(CYGPATH_W) '../sim-idm.c'; else $(CYGPATH_W) '$(srcdir)/../sim-idm.c'; fi`

test_load_directives-sim-timezone.o: ../sim-timezone.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-timezone.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-timezone.Tpo -c -o test_load_directives-sim-timezone.o `test -f '../sim-timezone.c' || echo '$(srcdir)/'`../sim-timezone.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-timezone.Tpo $(DEPDIR)/test_load_directives-sim-timezone.Po
#	$(AM_V_CC)source='../sim-timezone.c' object='test_load_directives-sim-timezone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-timezone.o `test -f '../sim-timezone.c' || echo '$(srcdir)/'`../sim-timezone.c

test_load_directives-sim-timezone.obj: ../sim-timezone.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-timezone.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-timezone.Tpo -c -o test_load_directives-sim-timezone.obj `if test -f '../sim-timezone.c'; then $(CYGPATH_W) '../sim-timezone.c'; else $(CYGPATH_W) '$(srcdir)/../sim-timezone.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-timezone.Tpo $(DEPDIR)/test_load_directives-sim-timezone.Po
#	$(AM_V_CC)source='../sim-timezone.c' object='test_load_directives-sim-timezone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-timezone.obj `if test -f '../sim-timezone.c'; then $(CYGPATH_W) '../sim-timezone.c'; else $(CYGPATH_W) '$(srcdir)/../sim-timezone.c'; fi`

test_load_directives-sim-geoip.o: ../sim-geoip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-geoip.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-geoip.Tpo -c -o test_load_directives-sim-geoip.o `test -f '../sim-geoip.c' || echo '$(srcdir)/'`../sim-geoip.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-geoip.Tpo $(DEPDIR)/test_load_directives-sim-geoip.Po
#	$(AM_V_CC)source='../sim-geoip.c' object='test_load_directives-sim-geoip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-geoip.o `test -f '../sim-geoip.c' || echo '$(srcdir)/'`../sim-geoip.c

test_load_directives-sim-geoip.obj: ../sim-geoip.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-geoip.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-geoip.Tpo -c -o test_load_directives-sim-geoip.obj `if test -f '../sim-geoip.c'; then $(CYGPATH_W) '../sim-geoip.c'; else $(CYGPATH_W) '$(srcdir)/../sim-geoip.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-geoip.Tpo $(DEPDIR)/test_load_directives-sim-geoip.Po
#	$(AM_V_CC)source='../sim-geoip.c' object='test_load_directives-sim-geoip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-geoip.obj `if test -f '../sim-geoip.c'; then $(CYGPATH_W) '../sim-geoip.c'; else $(CYGPATH_W) '$(srcdir)/../sim-geoip.c'; fi`

test_load_directives-sim-alarm-stats.o: ../sim-alarm-stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-alarm-stats.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-alarm-stats.Tpo -c -o test_load_directives-sim-alarm-stats.o `test -f '../sim-alarm-stats.c' || echo '$(srcdir)/'`../sim-alarm-stats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-alarm-stats.Tpo $(DEPDIR)/test_load_directives-sim-alarm-stats.Po
#	$(AM_V_CC)source='../sim-alarm-stats.c' object='test_load_directives-sim-alarm-stats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-alarm-stats.o `test -f '../sim-alarm-stats.c' || echo '$(srcdir)/'`../sim-alarm-stats.c

test_load_directives-sim-alarm-stats.obj: ../sim-alarm-stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-alarm-stats.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-alarm-stats.Tpo -c -o test_load_directives-sim-alarm-stats.obj `if test -f '../sim-alarm-stats.c'; then $(CYGPATH_W) '../sim-alarm-stats.c'; else $(CYGPATH_W) '$(srcdir)/../sim-alarm-stats.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-alarm-stats.Tpo $(DEPDIR)/test_load_directives-sim-alarm-stats.Po
#	$(AM_V_CC)source='../sim-alarm-stats.c' object='test_load_directives-sim-alarm-stats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-alarm-stats.obj `if test -f '../sim-alarm-stats.c'; then $(CYGPATH_W) '../sim-alarm-stats.c'; else $(CYGPATH_W) '$(srcdir)/../sim-alarm-stats.c'; fi`

test_load_directives-sim-xml-config.o: ../sim-xml-config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-xml-config.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-xml-config.Tpo -c -o test_load_directives-sim-xml-config.o `test -f '../sim-xml-config.c' || echo '$(srcdir)/'`../sim-xml-config.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-xml-config.Tpo $(DEPDIR)/test_load_directives-sim-xml-config.Po
#	$(AM_V_CC)source='../sim-xml-config.c' object='test_load_directives-sim-xml-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-xml-config.o `test -f '../sim-xml-config.c' || echo '$(srcdir)/'`../sim-xml-config.c

test_load_directives-sim-xml-config.obj: ../sim-xml-config.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-xml-config.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-xml-config.Tpo -c -o test_load_directives-sim-xml-config.obj `if test -f '../sim-xml-config.c'; then $(CYGPATH_W) '../sim-xml-config.c'; else $(CYGPATH_W) '$(srcdir)/../sim-xml-config.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-xml-config.Tpo $(DEPDIR)/test_load_directives-sim-xml-config.Po
#	$(AM_V_CC)source='../sim-xml-config.c' object='test_load_directives-sim-xml-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-xml-config.obj `if test -f '../sim-xml-config.c'; then $(CYGPATH_W) '../sim-xml-config.c'; else $(CYGPATH_W) '$(srcdir)/../sim-xml-config.c'; fi`

test_load_directives-sim-groupalarm.o: ../sim-groupalarm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-groupalarm.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-groupalarm.Tpo -c -o test_load_directives-sim-groupalarm.o `test -f '../sim-groupalarm.c' || echo '$(srcdir)/'`../sim-groupalarm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-groupalarm.Tpo $(DEPDIR)/test_load_directives-sim-groupalarm.Po
#	$(AM_V_CC)source='../sim-groupalarm.c' object='test_load_directives-sim-groupalarm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-groupalarm.o `test -f '../sim-groupalarm.c' || echo '$(srcdir)/'`../sim-groupalarm.c

test_load_directives-sim-groupalarm.obj: ../sim-groupalarm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-groupalarm.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-groupalarm.Tpo -c -o test_load_directives-sim-groupalarm.obj `if test -f '../sim-groupalarm.c'; then $(CYGPATH_W) '../sim-groupalarm.c'; else $(CYGPATH_W) '$(srcdir)/../sim-groupalarm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-groupalarm.Tpo $(DEPDIR)/test_load_directives-sim-groupalarm.Po
#	$(AM_V_CC)source='../sim-groupalarm.c' object='test_load_directives-sim-groupalarm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-groupalarm.obj `if test -f '../sim-groupalarm.c'; then $(CYGPATH_W) '../sim-groupalarm.c'; else $(CYGPATH_W) '$(srcdir)/../sim-groupalarm.c'; fi`

test_load_directives-sim-reputation.o: ../sim-reputation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-reputation.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-reputation.Tpo -c -o test_load_directives-sim-reputation.o `test -f '../sim-reputation.c' || echo '$(srcdir)/'`../sim-reputation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-reputation.Tpo $(DEPDIR)/test_load_directives-sim-reputation.Po
#	$(AM_V_CC)source='../sim-reputation.c' object='test_load_directives-sim-reputation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-reputation.o `test -f '../sim-reputation.c' || echo '$(srcdir)/'`../sim-reputation.c

test_load_directives-sim-reputation.obj: ../sim-reputation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-reputation.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-reputation.Tpo -c -o test_load_directives-sim-reputation.obj `if test -f '../sim-reputation.c'; then $(CYGPATH_W) '../sim-reputation.c'; else $(CYGPATH_W) '$(srcdir)/../sim-reputation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-reputation.Tpo $(DEPDIR)/test_load_directives-sim-reputation.Po
#	$(AM_V_CC)source='../sim-reputation.c' object='test_load_directives-sim-reputation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-reputation.obj `if test -f '../sim-reputation.c'; then $(CYGPATH_W) '../sim-reputation.c'; else $(CYGPATH_W) '$(srcdir)/../sim-reputation.c'; fi`

test_load_directives-sim-connect.o: ../sim-connect.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-connect.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-connect.Tpo -c -o test_load_directives-sim-connect.o `test -f '../sim-connect.c' || echo '$(srcdir)/'`../sim-connect.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-connect.Tpo $(DEPDIR)/test_load_directives-sim-connect.Po
#	$(AM_V_CC)source='../sim-connect.c' object='test_load_directives-sim-connect.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-connect.o `test -f '../sim-connect.c' || echo '$(srcdir)/'`../sim-connect.c

test_load_directives-sim-connect.obj: ../sim-connect.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-connect.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-connect.Tpo -c -o test_load_directives-sim-connect.obj `if test -f '../sim-connect.c'; then $(CYGPATH_W) '../sim-connect.c'; else $(CYGPATH_W) '$(srcdir)/../sim-connect.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-connect.Tpo $(DEPDIR)/test_load_directives-sim-connect.Po
#	$(AM_V_CC)source='../sim-connect.c' object='test_load_directives-sim-connect.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-connect.obj `if test -f '../sim-connect.c'; then $(CYGPATH_W) '../sim-connect.c'; else $(CYGPATH_W) '$(srcdir)/../sim-connect.c'; fi`

test_load_directives-sim-log.o: ../sim-log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-log.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-log.Tpo -c -o test_load_directives-sim-log.o `test -f '../sim-log.c' || echo '$(srcdir)/'`../sim-log.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-log.Tpo $(DEPDIR)/test_load_directives-sim-log.Po
#	$(AM_V_CC)source='../sim-log.c' object='test_load_directives-sim-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-log.o `test -f '../sim-log.c' || echo '$(srcdir)/'`../sim-log.c

test_load_directives-sim-log.obj: ../sim-log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-log.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-log.Tpo -c -o test_load_directives-sim-log.obj `if test -f '../sim-log.c'; then $(CYGPATH_W) '../sim-log.c'; else $(CYGPATH_W) '$(srcdir)/../sim-log.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-log.Tpo $(DEPDIR)/test_load_directives-sim-log.Po
#	$(AM_V_CC)source='../sim-log.c' object='test_load_directives-sim-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-log.obj `if test -f '../sim-log.c'; then $(CYGPATH_W) '../sim-log.c'; else $(CYGPATH_W) '$(srcdir)/../sim-log.c'; fi`

test_load_directives-sim-organizer.o: ../sim-organizer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-organizer.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-organizer.Tpo -c -o test_load_directives-sim-organizer.o `test -f '../sim-organizer.c' || echo '$(srcdir)/'`../sim-organizer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-organizer.Tpo $(DEPDIR)/test_load_directives-sim-organizer.Po
#	$(AM_V_CC)source='../sim-organizer.c' object='test_load_directives-sim-organizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-organizer.o `test -f '../sim-organizer.c' || echo '$(srcdir)/'`../sim-organizer.c

test_load_directives-sim-organizer.obj: ../sim-organizer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-organizer.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-organizer.Tpo -c -o test_load_directives-sim-organizer.obj `if test -f '../sim-organizer.c'; then $(CYGPATH_W) '../sim-organizer.c'; else $(CYGPATH_W) '$(srcdir)/../sim-organizer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-organizer.Tpo $(DEPDIR)/test_load_directives-sim-organizer.Po
#	$(AM_V_CC)source='../sim-organizer.c' object='test_load_directives-sim-organizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-organizer.obj `if test -f '../sim-organizer.c'; then $(CYGPATH_W) '../sim-organizer.c'; else $(CYGPATH_W) '$(srcdir)/../sim-organizer.c'; fi`

test_load_directives-sim-correlation.o: ../sim-correlation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-correlation.o -MD -MP -MF $(DEPDIR)/test_load_directives-sim-correlation.Tpo -c -o test_load_directives-sim-correlation.o `test -f '../sim-correlation.c' || echo '$(srcdir)/'`../sim-correlation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-correlation.Tpo $(DEPDIR)/test_load_directives-sim-correlation.Po
#	$(AM_V_CC)source='../sim-correlation.c' object='test_load_directives-sim-correlation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-correlation.o `test -f '../sim-correlation.c' || echo '$(srcdir)/'`../sim-correlation.c

test_load_directives-sim-correlation.obj: ../sim-correlation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -MT test_load_directives-sim-correlation.obj -MD -MP -MF $(DEPDIR)/test_load_directives-sim-correlation.Tpo -c -o test_load_directives-sim-correlation.obj `if test -f '../sim-correlation.c'; then $(CYGPATH_W) '../sim-correlation.c'; else $(CYGPATH_W) '$(srcdir)/../sim-correlation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_load_directives-sim-correlation.Tpo $(DEPDIR)/test_load_directives-sim-correlation.Po
#	$(AM_V_CC)source='../sim-correlation.c' object='test_load_directives-sim-correlation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_load_directives_CFLAGS) $(CFLAGS) -c -o test_load_directives-sim-correlation.obj `if test -f '../sim-correlation.c'; then $(CYGPATH_W) '../sim-correlation.c'; else $(CYGPATH_W) '$(srcdir)/../sim-correlation.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test-load-directives.log: test-load-directives$(EXEEXT)
	@p='test-load-directives$(EXEEXT)'; \
	b='test-load-directives'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
